service: splitflap
# app and org for use with dashboard.serverless.com
#app: your-app-name
#org: your-org-name

# You can pin your service to only deploy with a specific Serverless version
# Check out our docs for more details
frameworkVersion: '2'

provider:
  name: aws
  runtime: nodejs12.x
  lambdaHashingVersion: 20201221
  profile: ${env:AWS_PROFILE}
  region: ${env:REGION}
  stage: dev
  apiGateway:
    shouldStartNameWithService: true
  iamRoleStatements:
    - Effect: Allow
      Action:
        - iot:*
      Resource: '*'

functions:
  publishDisplays:
    handler: src/publishDisplaysHandler.publishDisplays
    environment:
      SPLITFLAP_IOT_ENDPOINT: ${env:SPLITFLAP_IOT_ENDPOINT}
    events:
      - http:
          path: /splitFlap/publishDisplays
          method: post
          cors: true
  publishReset:
    handler: src/publishResetHandler.publishReset
    environment:
      SPLITFLAP_IOT_ENDPOINT: ${env:SPLITFLAP_IOT_ENDPOINT}
    events:
      - http:
          path: /splitFlap/publishReset
          method: post
          cors: true
  publishDisableMotors:
    handler: src/publishDisableMotorsHandler.publishDisableMotors
    environment:
      SPLITFLAP_IOT_ENDPOINT: ${env:SPLITFLAP_IOT_ENDPOINT}
    events:
      - http:
          path: /splitFlap/publishDisableMotors
          method: post
          cors: true
  publishStartTimer:
    handler: src/publishStartTimerHandler.publishStartTimer
    environment:
      SPLITFLAP_IOT_ENDPOINT: ${env:SPLITFLAP_IOT_ENDPOINT}
    events:
      - http:
          path: /splitFlap/publishStartTimer
          method: post
          cors: true
